basePath: /api/v1
definitions:
  entities.AuthUser:
    properties:
      login:
        type: string
      session_id:
        type: string
    type: object
  entities.Author:
    properties:
      icon_url:
        type: string
      login:
        type: string
    type: object
  entities.Comment:
    properties:
      author:
        $ref: '#/definitions/entities.Author'
      created_at:
        type: string
      id:
        type: integer
      text:
        maxLength: 250
        minLength: 1
        type: string
      updated_at:
        type: string
    required:
    - text
    type: object
  entities.CommentCreate:
    properties:
      text:
        maxLength: 250
        minLength: 1
        type: string
    required:
    - text
    type: object
  entities.CommentDelete:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  entities.CommentUpdate:
    properties:
      id:
        type: integer
      text:
        maxLength: 250
        minLength: 1
        type: string
    required:
    - id
    - text
    type: object
  entities.FullRecipe:
    properties:
      comments:
        items:
          $ref: '#/definitions/entities.Comment'
        type: array
      is_liked:
        type: boolean
      likes_count:
        type: integer
      recipe:
        $ref: '#/definitions/entities.RecipeWithAuthor'
    type: object
  entities.GetRecipeAuthor:
    properties:
      user_id:
        type: integer
    type: object
  entities.JSONUserInfo:
    properties:
      user:
        $ref: '#/definitions/entities.UserInfo'
    type: object
  entities.JWTData:
    properties:
      user_id: {}
    type: object
  entities.JWTToken:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  entities.RecipeFilter:
    properties:
      limit:
        example: 25
        type: integer
      offset:
        example: 0
        type: integer
      order_by:
        enum:
        - -1
        - 0
        - 1
        maximum: 1
        minimum: -1
        type: integer
      order_field:
        enum:
        - title
        - about
        - ingridients
        - emtpy
        example: title
        type: string
      query:
        example: tasty food
        type: string
    type: object
  entities.RecipeInfo:
    properties:
      info:
        $ref: '#/definitions/entities.FullRecipe'
    type: object
  entities.RecipeWithAuthor:
    properties:
      about:
        maxLength: 2500
        type: string
      author:
        $ref: '#/definitions/entities.Author'
      complexity:
        enum:
        - 1
        - 2
        - 3
        maximum: 3
        minimum: 1
        type: integer
      created_at:
        type: string
      creator_user_id:
        type: integer
      id:
        type: integer
      ingridients:
        maxLength: 1500
        type: string
      instructions:
        maxLength: 2000
        type: string
      need_time:
        type: string
      photos_urls:
        type: string
      title:
        maxLength: 50
        minLength: 3
        type: string
      updated_at:
        type: string
    required:
    - about
    - complexity
    - ingridients
    - instructions
    - need_time
    - title
    type: object
  entities.UserIcon:
    properties:
      icon_url:
        type: string
    type: object
  entities.UserInfo:
    properties:
      about:
        type: string
      created_at:
        type: string
      icon_url:
        type: string
      id:
        type: integer
      liked_recipies:
        items:
          $ref: '#/definitions/entities.RecipeWithAuthor'
        type: array
      login:
        type: string
      recipies:
        items:
          $ref: '#/definitions/entities.RecipeWithAuthor'
        type: array
    type: object
  entities.UserLogin:
    properties:
      email:
        example: test@test.com
        type: string
      login:
        example: testuser
        type: string
      password:
        example: testpassword
        maxLength: 50
        minLength: 8
        type: string
    required:
    - password
    type: object
  entities.UserPasswordUpdate:
    properties:
      password:
        example: testpassword
        maxLength: 50
        minLength: 8
        type: string
    required:
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: RestAPI for recipe site
  title: RecipeSite
  version: "1.0"
paths:
  /auth/checktgtoken:
    post:
      consumes:
      - application/json
      description: Check user telegram token
      operationId: Check user telegram token
      parameters:
      - description: token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/entities.JWTToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.JWTData'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Check user telegram token
      tags:
      - auth
  /auth/logout:
    post:
      description: Logout user
      operationId: Logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Logout
      tags:
      - auth
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Sign in user
      operationId: signin
      parameters:
      - description: User params
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.AuthUser'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Sign in
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Sign up user
      operationId: signup
      parameters:
      - description: User params
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.AuthUser'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Sign up
      tags:
      - auth
  /auth/tgtoken:
    get:
      description: Generate user telegram token
      operationId: generate user telegram token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.JWTToken'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Generate user telegram token
      tags:
      - auth
  /recipe:
    get:
      description: Get all recipe
      operationId: get all recipe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.RecipeWithAuthor'
            type: array
        "500":
          description: Internal Server Error
      summary: Get all recipe
      tags:
      - recipe
    post:
      consumes:
      - application/json
      description: Get filtered recipe
      operationId: get filtered recipe
      parameters:
      - description: filter
        in: body
        name: filter
        schema:
          $ref: '#/definitions/entities.RecipeFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.RecipeWithAuthor'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get filtered recipe
      tags:
      - recipe
  /recipe/{id}:
    get:
      description: Get recipe
      operationId: get recipe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.RecipeInfo'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get recipe
      tags:
      - recipe
  /recipe/{id}/comment:
    delete:
      consumes:
      - application/json
      description: Delete comment
      operationId: delete comment
      parameters:
      - description: Comment params
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/entities.CommentDelete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete comment
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Create comment
      operationId: create comment
      parameters:
      - description: Comment params
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/entities.CommentCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create comment
      tags:
      - comments
    put:
      consumes:
      - application/json
      description: Update comment
      operationId: update comment
      parameters:
      - description: Comment params
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/entities.CommentUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Update comment
      tags:
      - comments
  /recipe/{id}/like:
    post:
      description: Like recipe
      operationId: like
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Like
      tags:
      - likes
  /recipe/{id}/unlike:
    post:
      description: Unlike recipe
      operationId: unlike
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Unlike
      tags:
      - likes
  /recipe/author:
    post:
      consumes:
      - application/json
      description: Get recipe author
      operationId: get recipe author
      parameters:
      - description: Get author
        in: body
        name: getauthor
        schema:
          $ref: '#/definitions/entities.GetRecipeAuthor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Author'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get recipe author
      tags:
      - recipe
  /user/{login}:
    get:
      description: Get user info
      operationId: get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.JSONUserInfo'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get user info
      tags:
      - user
    put:
      consumes:
      - multipart/form-data
      description: Update user
      operationId: update user
      parameters:
      - description: Icon
        in: formData
        name: icon
        type: file
      - in: formData
        maxLength: 1500
        name: about
        type: string
      - in: formData
        maxLength: 20
        minLength: 3
        name: login
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: login
          schema:
            type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Update user
      tags:
      - user
  /user/{login}/icon:
    get:
      description: Get user icon
      operationId: get icon
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UserIcon'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get icon
      tags:
      - user
  /user/{login}/password:
    put:
      consumes:
      - application/json
      description: Update user password
      operationId: update user password
      parameters:
      - description: User params
        in: body
        name: user
        schema:
          $ref: '#/definitions/entities.UserPasswordUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Update user password
      tags:
      - user
  /user/{login}/recipe:
    post:
      consumes:
      - multipart/form-data
      description: Create recipe
      operationId: create recipe
      parameters:
      - description: Photos
        in: formData
        name: photos
        type: file
      - in: formData
        maxLength: 2500
        name: about
        required: true
        type: string
      - enum:
        - 1
        - 2
        - 3
        in: formData
        maximum: 3
        minimum: 1
        name: complexity
        required: true
        type: integer
      - in: formData
        maxLength: 1500
        name: ingridients
        required: true
        type: string
      - in: formData
        maxLength: 2000
        name: instructions
        required: true
        type: string
      - in: formData
        name: need_time
        required: true
        type: string
      - in: formData
        maxLength: 50
        minLength: 3
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create recipe
      tags:
      - recipe
  /user/{login}/recipe/{id}:
    delete:
      description: Delete recipe
      operationId: delete recipe
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete recipe
      tags:
      - recipe
    put:
      consumes:
      - multipart/form-data
      description: Update recipe
      operationId: update recipe
      parameters:
      - description: Photos
        in: formData
        name: photos
        type: file
      - in: formData
        maxLength: 2500
        name: about
        type: string
      - enum:
        - 1
        - 2
        - 3
        in: formData
        maximum: 3
        minimum: 1
        name: complexity
        type: integer
      - in: formData
        maxLength: 1500
        name: ingridients
        type: string
      - in: formData
        maxLength: 2000
        name: instructions
        required: true
        type: string
      - in: formData
        name: need_time
        type: string
      - in: formData
        maxLength: 50
        minLength: 3
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Update recipe
      tags:
      - recipe
  /user/{login}/subscribe:
    post:
      description: Subscribe to user
      operationId: subscribe to user
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Subscribe to user
      tags:
      - subscription
  /user/{login}/unsubscribe:
    post:
      description: Unsubscribe from user
      operationId: unsubscribe from user
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Unsubscribe from user
      tags:
      - subscription
swagger: "2.0"
