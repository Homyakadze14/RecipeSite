services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'pass'
      POSTGRES_DB: 'postgres'
    ports:
      - 5432:5432

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8.12-management
    restart: always
    ports:
      - 5672:5672

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=redispassword
      - REDIS_PORT=6379

  backend:
    build: ./backend
    container_name: backend
    image: backend
    restart: always
    env_file: backend/.env
    environment:
      GIN_MODE: release
      PG_URL: 'postgres://user:pass@postgres:5432/postgres'
      RMQ_URL: 'amqp://guest:guest@rabbitmq:5672/'
      REDIS_ADDRESS: 'redis:6379'
      REDIS_PASSWORD: 'redispassword'
    ports:
      - 8080:8080
    depends_on:
      - postgres
      - rabbitmq
      - redis

  tg-bot:
    build: ./telegrambot
    container_name: tg-bot
    image: tg-bot
    restart: always
    env_file: telegrambot/bot/.env
    environment:
      BACKEND_BASE_URL: "http://172.17.0.1:8080/api/v1"
      DB_URL: 'postgresql://user:pass@postgres:5432/postgres'
      RMQ_URL: 'amqp://guest:guest@rabbitmq:5672/'
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - backend

volumes:
  pg-data:
